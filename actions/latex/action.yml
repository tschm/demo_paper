# GitHub Action to compile LaTeX documents and deploy them
# This action compiles LaTeX files to PDF using Tectonic and can deploy them to GitHub Pages
name: Compile and Deploy LaTeX Documents

description: "Advanced LaTeX document compilation with error handling, GitHub Pages deployment, and release creation"

inputs:
  paper:
    description: 'Space-separated LaTeX files to compile'
    required: true
  output-folder:
    description: 'Output directory for compiled documents'
    required: false
    default: 'compiled'
  draft:
    description: 'Target branch for deployment'
    required: false
    default: 'draft'


runs:
  using: "composite"
  steps:
    - name: Set up Git repository
      uses: actions/checkout@v4

    - name: Setup environment variables
      shell: bash
      run: |
        echo "BUILD_DIR=build_${{ github.run_id }}" >> $GITHUB_ENV

    - name: Create output directories
      shell: bash
      run: |
        mkdir -p ${{ env.BUILD_DIR }}
        mkdir -p ${{ inputs.output-folder }}

    - name: Validate input files
      shell: bash
      run: |
        for f in ${{ inputs.paper }}; do
          if [ ! -f "$f" ]; then
            echo "Error: File $f not found!"
            exit 1
          fi
        done

    - name: Install Tectonic and biber
      shell: bash
      run: |
        # install tectonic in the directory you run from
        curl --proto '=https' --tlsv1.2 -fsSL https://drop-sh.fullyjustified.net | sh
        # install biber
        sudo apt-get update -y
        sudo apt-get install -y biber

        ./tectonic --version
        biber --version

    - name: Compile LaTeX documents
      shell: bash
      env:
        RUST_BACKTRACE: '1'
      run: |
        echo "Starting compilation at $(date)"

        compile_doc() {
          local doc="$1"
          local dir
          dir=$(dirname "$doc")
          local file
          file=$(basename "$doc")

          echo "Compiling $doc from $dir"

          pushd "$dir" > /dev/null
          if ! ../tectonic "$file" --outdir "../${{ env.BUILD_DIR }}" --keep-logs; then
            echo "Error compiling $doc - check logs"
            popd > /dev/null
            return 1
          fi
          popd > /dev/null

          cp ${{ env.BUILD_DIR }}/*.pdf ${{ inputs.output-folder }}/
          echo "Successfully compiled $doc"
        }

        for f in ${{ inputs.paper }}; do
          compile_doc "$f" || exit 1
        done

    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: ${{ inputs.draft }}
        folder: ${{ inputs.output-folder }}
        commit-message: "Build: ${{ github.run_id }} [skip ci]"
        clean: true
        single-commit: false

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: latex
        path: |
          ${{ inputs.output-folder }}
        retention-days: 7
