#!/bin/bash
set -e

echo "[INFO] Generating Git metadata for LaTeX header..."

# Git metadata
SHA=$(git rev-parse --short HEAD)
BRANCH=$(git rev-parse --abbrev-ref HEAD)
DATE=$(git log -1 --format=%cd --date=short)
TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "untagged")

# Add -dirty if working tree isn't clean
if ! git diff-index --quiet HEAD --; then
    echo "[WARN] Working tree is dirty â€“ marking metadata as such"
    SHA="${SHA}-dirty"
    TAG="${TAG}-dirty"
fi

# Get remote URL
REMOTE_URL=$(git config --get remote.origin.url)
echo "[INFO] Remote URL: $REMOTE_URL"

# Extract GitHub slug (user/repo)
GH_SLUG=$(echo "$REMOTE_URL" | sed -E 's|.*github.com[/:]([^/]+/[^/.]+)(\.git)?|\1|')

if [[ -z "$GH_SLUG" ]]; then
  echo "[ERROR] Could not determine GitHub repository slug from remote URL"
  GH_SLUG="unknown/repo"
else
  echo "[INFO] GitHub repo detected: $GH_SLUG"
fi

# Construct URLs
FULL_SHA=$(git rev-parse HEAD)
COMMIT_URL="https://github.com/${GH_SLUG}/commit/${FULL_SHA}"
TAG_URL="https://github.com/${GH_SLUG}/releases/tag/${TAG}"

echo "[INFO] Commit SHA: $SHA"
echo "[INFO] Branch: $BRANCH"
echo "[INFO] Commit date: $DATE"
echo "[INFO] Tag: $TAG"
echo "[INFO] Commit URL: $COMMIT_URL"
echo "[INFO] Tag URL: $TAG_URL"

# Write LaTeX macros
cat <<EOF > header.tex
% Auto-generated by make_header.sh
\\usepackage{hyperref}
\\newcommand{\\commitsha}{\\href{$COMMIT_URL}{\\texttt{$SHA}}}
\\newcommand{\\branchname}{\\texttt{$BRANCH}}
\\newcommand{\\commitdate}{\\texttt{$DATE}}
\\newcommand{\\reponame}{\\texttt{$GH_SLUG}}
\\newcommand{\\tagname}{\\href{$TAG_URL}{\\texttt{$TAG}}}
EOF

echo "[INFO] Successfully wrote Git metadata to header.tex"

